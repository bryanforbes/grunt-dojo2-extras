{"version":3,"file":"log.js","sourceRoot":"","sources":["../../../../tests/unit/src/log.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,6CAA+C;IAC/C,2CAA6C;IAC7C,6BAA+B;IAC/B,+BAAoC;IACpC,mCAAwD;IAExD,IAAM,gBAAgB,GAA2C,EAAE,CAAC;IAEpE,aAAa,CAAC;QACb,IAAI,EAAE,KAAK;QAEX,MAAM;YACL,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;gBACvC,gBAAgB,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YACpD,CAAC;YACD,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACpB,CAAC;QAED,KAAK;YACJ,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACnB,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,gBAAgB,CAAC,CAAC,CAAC;gBAClC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YACnD,CAAC;QACF,CAAC;QAEK,SAAS;;oBACR,MAAM,EAGN,QAAQ,EACR,MAAM;;6BAJG,IAAI,oBAAU,CAAC,MAAM,EAAE;oBACtC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;+BAElB,aAAa;6BACf,IAAI,eAAS,EAAE;oBAE9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBACvB,MAAM,CAAC,GAAG,EAAE,CAAC;oBAEb,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,WAAU,QAAW,CAAC,CAAC;;;;SACjE;KACD,CAAC,CAAC","sourcesContent":["import * as registerSuite from 'intern!object';\nimport * as assert from 'intern/chai!assert';\nimport * as log from 'src/log';\nimport { LogStream } from 'src/log';\nimport { TransportInstance, transports } from 'winston';\n\nconst cachedTransports: { [ key: string ]: TransportInstance } = {};\n\nregisterSuite({\n\tname: 'log',\n\n\tbefore() {\n\t\tfor (let key in log.logger.transports) {\n\t\t\tcachedTransports[key] = log.logger.transports[key];\n\t\t}\n\t\tlog.logger.clear();\n\t},\n\n\tafter() {\n\t\tlog.logger.clear();\n\t\tfor (let key in cachedTransports) {\n\t\t\tlog.logger.add(cachedTransports[key], null, true);\n\t\t}\n\t},\n\n\tasync LogStream() {\n\t\tconst memory = new transports.Memory();\n\t\tlog.logger.add(memory, null, true);\n\n\t\tconst expected = 'Hello World';\n\t\tconst stream = new LogStream();\n\n\t\tstream.write(expected);\n\t\tstream.end();\n\n\t\tassert.strictEqual(memory.writeOutput[0], `info: ${ expected }`);\n\t}\n});\n"]}