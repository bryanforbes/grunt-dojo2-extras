{"version":3,"file":"installDependencies.js","sourceRoot":"","sources":["../../../../../tests/unit/src/commands/installDependencies.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,6CAA+C;IAC/C,2CAA6C;IAC7C,2DAA8E;IAC9E,+BAAwC;IAExC,IAAI,mBAAwB,CAAC;IAC7B,IAAI,QAAmB,CAAC;IACxB,IAAI,eAA0B,CAAC;IAC/B,IAAI,cAAyB,CAAC;IAE9B,aAAa,CAAC;QACb,IAAI,EAAE,8BAA8B;QAEpC,MAAM;YACL,QAAQ,GAAG,YAAI,EAAE,CAAC;YAClB,eAAe,GAAG,YAAI,EAAE,CAAC;YACzB,cAAc,GAAG,YAAI,EAAE,CAAC;QACzB,CAAC;QAED,KAAK;YACJ,+BAAkB,EAAE,CAAC;QACtB,CAAC;QAED,UAAU;YACT,mBAAmB,GAAG,oBAAU,CAAC,kCAAkC,EAAE;gBACpE,MAAM,EAAE;oBACP,IAAI,EAAE,QAAQ;iBACd;gBACD,iBAAiB,EAAE;oBAClB,WAAW,EAAE,eAAe;iBAC5B;gBACD,IAAI,EAAE;oBACL,UAAU,EAAE,cAAc;iBAC1B;aACD,CAAC,CAAC;QACJ,CAAC;QAED,SAAS;YACR,QAAQ,CAAC,KAAK,EAAE,CAAC;YACjB,eAAe,CAAC,KAAK,EAAE,CAAC;YACxB,cAAc,CAAC,KAAK,EAAE,CAAC;QACxB,CAAC;QAED,mBAAmB,EAAE,CAAC;YACrB,IAAM,GAAG,GAAG,KAAK,CAAC;YAClB,IAAM,cAAc,GAAG,kBAAkB,CAAC;YAE1C,MAAM,CAAC;gBACA,qBAAqB;;;;;oCAC1B,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oCAE7B,WAAM,yBAAyB,CAAC,GAAG,CAAC,EAAA;;oCAApC,SAAoC,CAAC;oCAErC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;oCAC3C,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;;;;;iBAChE;gBAEK,6BAA6B;;;;;oCAClC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oCAE9B,WAAM,yBAAyB,CAAC,GAAG,CAAC,EAAA;;oCAApC,SAAoC,CAAC;oCAErC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;;;;;iBAC1C;aACD,CAAC;YAEF,mCAAyC,GAAW;;;;;;gCACnD,QAAQ,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gCAEb,WAAM,mBAAmB,CAAC,GAAG,CAAC,EAAA;;gCAA5C,WAAW,GAAG,SAA8B;gCAElD,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;gCAChD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gCACnC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;gCACpD,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gCAE/D,WAAO,WAAW,EAAC;;;;aACnB;QACF,CAAC,CAAC,EAAE;KACJ,CAAC,CAAC","sourcesContent":["import * as registerSuite from 'intern!object';\nimport * as assert from 'intern/chai!assert';\nimport loadModule, { cleanupModuleMocks } from '../../../_support/loadModule';\nimport { stub, SinonStub } from 'sinon';\n\nlet installDependencies: any;\nlet joinStub: SinonStub;\nlet promiseExecStub: SinonStub;\nlet existsSyncStub: SinonStub;\n\nregisterSuite({\n\tname: 'commands/installDependencies',\n\n\tbefore() {\n\t\tjoinStub = stub();\n\t\tpromiseExecStub = stub();\n\t\texistsSyncStub = stub();\n\t},\n\n\tafter() {\n\t\tcleanupModuleMocks();\n\t},\n\n\tbeforeEach() {\n\t\tinstallDependencies = loadModule('src/commands/installDependencies', {\n\t\t\t'path': {\n\t\t\t\tjoin: joinStub\n\t\t\t},\n\t\t\t'../util/process': {\n\t\t\t\tpromiseExec: promiseExecStub\n\t\t\t},\n\t\t\t'fs': {\n\t\t\t\texistsSync: existsSyncStub\n\t\t\t}\n\t\t});\n\t},\n\n\tafterEach() {\n\t\tjoinStub.reset();\n\t\tpromiseExecStub.reset();\n\t\texistsSyncStub.reset();\n\t},\n\n\tinstallDependencies: (() => {\n\t\tconst dir = 'dir';\n\t\tconst typingsJsonDir = 'dir/typings.json';\n\n\t\treturn {\n\t\t\tasync 'typings.json exists'() {\n\t\t\t\texistsSyncStub.returns(true);\n\n\t\t\t\tawait assertInstallDependencies(dir);\n\n\t\t\t\tassert.isTrue(promiseExecStub.calledTwice);\n\t\t\t\tassert.strictEqual(promiseExecStub.secondCall.args[1].cwd, dir);\n\t\t\t},\n\n\t\t\tasync 'typings.json does not exist'() {\n\t\t\t\texistsSyncStub.returns(false);\n\n\t\t\t\tawait assertInstallDependencies(dir);\n\n\t\t\t\tassert.isTrue(promiseExecStub.calledOnce);\n\t\t\t}\n\t\t};\n\n\t\tasync function assertInstallDependencies(dir: string) {\n\t\t\tjoinStub.returns(typingsJsonDir);\n\n\t\t\tconst typingsJson = await installDependencies(dir);\n\n\t\t\tassert.strictEqual(typingsJson, typingsJsonDir);\n\t\t\tassert.isTrue(joinStub.calledOnce);\n\t\t\tassert.strictEqual(joinStub.firstCall.args[0], dir);\n\t\t\tassert.strictEqual(promiseExecStub.firstCall.args[1].cwd, dir);\n\n\t\t\treturn typingsJson;\n\t\t}\n\t})()\n});\n"]}