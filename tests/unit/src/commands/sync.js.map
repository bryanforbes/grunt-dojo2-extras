{"version":3,"file":"sync.js","sourceRoot":"","sources":["../../../../../tests/unit/src/commands/sync.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,6CAA+C;IAC/C,2CAA6C;IAC7C,2DAA8E;IAC9E,+BAAuD;IAEvD,IAAI,IAAS,CAAC;IACd,IAAI,MAAgB,CAAC;IACrB,IAAI,YAAuB,CAAC;IAC5B,IAAI,iBAA4B,CAAC;IAEjC,IAAM,WAAW,GAAG;QACnB,MAAM,EAAE,QAAQ;QAChB,cAAc,EAAE,KAAK;QACrB,GAAG,EAAE,iBAAiB;KACtB,CAAC;IAEF,aAAa,CAAC;QACb,IAAI,EAAE,eAAe;QAErB,MAAM;YACL,YAAY,GAAG,YAAI,EAAE,CAAC;YACtB,iBAAiB,GAAG,YAAI,EAAE,CAAC;YAE3B,IAAM,GAAG;gBAAG;oBACX,WAAM,GAAc,YAAI,EAAE,CAAC;oBAC3B,aAAQ,GAAc,YAAY,CAAC;oBACnC,UAAK,GAAc,YAAI,EAAE,CAAC;oBAC1B,iBAAY,GAAc,YAAI,EAAE,CAAC;oBACjC,iBAAY,GAAc,YAAI,EAAE,CAAC;oBACjC,kBAAa,GAAc,iBAAiB,CAAC;oBAC7C,SAAI,GAAc,YAAI,EAAE,CAAC;gBAC1B,CAAC;gBAAD,cAAC;YAAD,CAAC,AARW,GAQX,CAAC;YAEF,MAAM,GAAG,WAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC;QAED,KAAK;YACJ,+BAAkB,EAAE,CAAC;QACtB,CAAC;QAED,UAAU;YACT,IAAI,GAAG,oBAAU,CAAC,mBAAmB,EAAE;gBACtC,aAAa,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE;aAClC,CAAC,CAAC;QACJ,CAAC;QAED,SAAS;YACR,MAAM,CAAC,KAAK,EAAE,CAAC;YACf,YAAY,CAAC,KAAK,EAAE,CAAC;YACrB,iBAAiB,CAAC,KAAK,EAAE,CAAC;QAC3B,CAAC;QAED,IAAI,EAAE,CAAC;YACN,MAAM,CAAC;gBACA,+CAA+C;;4BAM9C,GAAG;;;;oCALT,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;oCAChD,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oCAEhC,WAAM,UAAU,EAAE,EAAA;;oCAAlB,SAAkB,CAAC;0CAEP,MAAM,CAAC,QAAQ,CAAC,WAAW;oCAEvC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oCACrC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;;;;iBACnC;gBAEK,mDAAmD;;4BAMlD,GAAG;;;;oCALT,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;oCACxC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;oCAEjC,WAAM,UAAU,EAAE,EAAA;;oCAAlB,SAAkB,CAAC;0CAEP,MAAM,CAAC,QAAQ,CAAC,WAAW;oCAEvC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;oCACpC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;;;;;iBACnC;gBAEK,iCAAiC;;4BAMhC,GAAG;;;;oCALT,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;oCACvC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;oCAEhC,WAAM,UAAU,EAAE,EAAA;;oCAAlB,SAAkB,CAAC;0CAEP,MAAM,CAAC,QAAQ,CAAC,WAAW;oCAEvC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;;;;;iBAC3C;aACD,CAAC;YAEF;;wBAGO,GAAG;;;oCAFT,WAAM,IAAI,CAAC,WAAW,CAAC,EAAA;;gCAAvB,SAAuB,CAAC;sCAEZ,MAAM,CAAC,QAAQ,CAAC,WAAW;gCAEvC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gCACjC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;gCAC3C,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;gCAC5C,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;;;;;aACvC;QACF,CAAC,CAAC,EAAE;KACJ,CAAC,CAAC","sourcesContent":["import * as registerSuite from 'intern!object';\nimport * as assert from 'intern/chai!assert';\nimport loadModule, { cleanupModuleMocks } from '../../../_support/loadModule';\nimport { spy, stub, SinonSpy, SinonStub } from 'sinon';\n\nlet sync: any;\nlet GitSpy: SinonSpy;\nlet checkoutStub: SinonStub;\nlet isInitializedStub: SinonStub;\n\nconst syncOptions = {\n\tbranch: 'master',\n\tcloneDirectory: 'dir',\n\turl: 'http://web.site'\n};\n\nregisterSuite({\n\tname: 'commands/sync',\n\n\tbefore() {\n\t\tcheckoutStub = stub();\n\t\tisInitializedStub = stub();\n\n\t\tconst Git = class {\n\t\t\tassert: SinonStub = stub();\n\t\t\tcheckout: SinonStub = checkoutStub;\n\t\t\tclone: SinonStub = stub();\n\t\t\tcreateOrphan: SinonStub = stub();\n\t\t\tensureConfig: SinonStub = stub();\n\t\t\tisInitialized: SinonStub = isInitializedStub;\n\t\t\tpull: SinonStub = stub();\n\t\t};\n\n\t\tGitSpy = spy(Git);\n\t},\n\n\tafter() {\n\t\tcleanupModuleMocks();\n\t},\n\n\tbeforeEach() {\n\t\tsync = loadModule('src/commands/sync', {\n\t\t\t'../util/Git': { default: GitSpy }\n\t\t});\n\t},\n\n\tafterEach() {\n\t\tGitSpy.reset();\n\t\tcheckoutStub.reset();\n\t\tisInitializedStub.reset();\n\t},\n\n\tsync: (() => {\n\t\treturn {\n\t\t\tasync 'Git initialized; checkout eventually resolves'() {\n\t\t\t\tcheckoutStub.returns(Promise.resolve('master'));\n\t\t\t\tisInitializedStub.returns(true);\n\n\t\t\t\tawait assertSync();\n\n\t\t\t\tconst git = GitSpy.lastCall.returnValue;\n\n\t\t\t\tassert.isTrue(git.assert.calledOnce);\n\t\t\t\tassert.isTrue(git.pull.calledOnce);\n\t\t\t},\n\n\t\t\tasync 'Git not initialized; checkout eventually resolves'() {\n\t\t\t\tcheckoutStub.returns(Promise.resolve());\n\t\t\t\tisInitializedStub.returns(false);\n\n\t\t\t\tawait assertSync();\n\n\t\t\t\tconst git = GitSpy.lastCall.returnValue;\n\n\t\t\t\tassert.isTrue(git.clone.calledOnce);\n\t\t\t\tassert.isTrue(git.pull.calledOnce);\n\t\t\t},\n\n\t\t\tasync 'Git checkout eventually rejects'() {\n\t\t\t\tcheckoutStub.returns(Promise.reject());\n\t\t\t\tisInitializedStub.returns(true);\n\n\t\t\t\tawait assertSync();\n\n\t\t\t\tconst git = GitSpy.lastCall.returnValue;\n\n\t\t\t\tassert.isTrue(git.createOrphan.calledOnce);\n\t\t\t}\n\t\t};\n\n\t\tasync function assertSync() {\n\t\t\tawait sync(syncOptions);\n\n\t\t\tconst git = GitSpy.lastCall.returnValue;\n\n\t\t\tassert.isTrue(GitSpy.calledOnce);\n\t\t\tassert.isTrue(git.ensureConfig.calledOnce);\n\t\t\tassert.isTrue(git.isInitialized.calledOnce);\n\t\t\tassert.isTrue(git.checkout.calledOnce);\n\t\t}\n\t})()\n});\n"]}